/*
Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file

SPDX-License-Identifier: Apache-2.0
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/gardener/cert-management/pkg/apis/cert/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CertificateRevocationLister helps list CertificateRevocations.
type CertificateRevocationLister interface {
	// List lists all CertificateRevocations in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.CertificateRevocation, err error)
	// CertificateRevocations returns an object that can list and get CertificateRevocations.
	CertificateRevocations(namespace string) CertificateRevocationNamespaceLister
	CertificateRevocationListerExpansion
}

// certificateRevocationLister implements the CertificateRevocationLister interface.
type certificateRevocationLister struct {
	indexer cache.Indexer
}

// NewCertificateRevocationLister returns a new CertificateRevocationLister.
func NewCertificateRevocationLister(indexer cache.Indexer) CertificateRevocationLister {
	return &certificateRevocationLister{indexer: indexer}
}

// List lists all CertificateRevocations in the indexer.
func (s *certificateRevocationLister) List(selector labels.Selector) (ret []*v1alpha1.CertificateRevocation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CertificateRevocation))
	})
	return ret, err
}

// CertificateRevocations returns an object that can list and get CertificateRevocations.
func (s *certificateRevocationLister) CertificateRevocations(namespace string) CertificateRevocationNamespaceLister {
	return certificateRevocationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CertificateRevocationNamespaceLister helps list and get CertificateRevocations.
type CertificateRevocationNamespaceLister interface {
	// List lists all CertificateRevocations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.CertificateRevocation, err error)
	// Get retrieves the CertificateRevocation from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.CertificateRevocation, error)
	CertificateRevocationNamespaceListerExpansion
}

// certificateRevocationNamespaceLister implements the CertificateRevocationNamespaceLister
// interface.
type certificateRevocationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CertificateRevocations in the indexer for a given namespace.
func (s certificateRevocationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CertificateRevocation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CertificateRevocation))
	})
	return ret, err
}

// Get retrieves the CertificateRevocation from the indexer for a given namespace and name.
func (s certificateRevocationNamespaceLister) Get(name string) (*v1alpha1.CertificateRevocation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("certificaterevocation"), name)
	}
	return obj.(*v1alpha1.CertificateRevocation), nil
}
